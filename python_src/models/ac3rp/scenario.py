from models.ac3rp.vehicle import Vehicle
from models.ac3rp.road import Road
from models.ac3rp.report import Report
from typing import List


class CrashScenario:
    @staticmethod
    def from_json(ac3r_json_data):
        """
        Take the JSON file generated by AC3R and instantiate a proper CrashScenario object.
        """
        # Define the car trajectories by interpolating the given points according to the following heuristic
        # if only one point is given, that's a location (crash location, parked position, etc)
        # if two points are given, that's a straight segment
        # if three points are given, that's an arc

        roads = []
        for i, road_dict in enumerate(ac3r_json_data["roads"]):
            key = f'road_{i}'
            roads.append(Road.from_dict(key, road_dict))

        vehicles = []
        for i, vehicle_dict in enumerate(ac3r_json_data["vehicles"]):
            key = f'V{i}'
            vehicles.append(Vehicle.from_dict(key, vehicle_dict, roads))

        reports = []
        # for report_dict in ac3r_json_data["expected_crash_components"]:
        #     reports.append(Report.from_dict(report_dict))

        return CrashScenario(ac3r_json_data["name"], roads, vehicles, reports)

    def __init__(self, name, roads: List[Road], vehicles: List[Vehicle], reports: List[Report], original_scenario: bool=False):
        # Meta Data
        self.name = name
        self.original_scenario = original_scenario
        # Road Geometry
        self.roads = roads
        # Vehicle Information and trajectory
        self.vehicles = vehicles
        # Police Report
        self.reports = reports
        # Scenario scores to store scores for evaluation
        self.scores = []

    def __str__(self):
        return str(self.__class__) + ": " + str(self.__dict__)
